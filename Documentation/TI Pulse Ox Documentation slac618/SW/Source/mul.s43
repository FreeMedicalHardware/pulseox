; --COPYRIGHT--,BSD
;  Copyright (c) 2012, Texas Instruments Incorporated
;  All rights reserved.
; 
;  Redistribution and use in source and binary forms, with or without
;  modification, are permitted provided that the following conditions
;  are met:
; 
;  *  Redistributions of source code must retain the above copyright
;     notice, this list of conditions and the following disclaimer.
; 
;  *  Redistributions in binary form must reproduce the above copyright
;     notice, this list of conditions and the following disclaimer in the
;     documentation and/or other materials provided with the distribution.
; 
;  *  Neither the name of Texas Instruments Incorporated nor the names of
;     its contributors may be used to endorse or promote products derived
;     from this software without specific prior written permission.
; 
;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
;  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
;  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
;  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
;  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
;  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
;  EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
; --/COPYRIGHT--
//16x16=>32 multiply
//int32_t mul16(register int16_t x, register int16_t y)

// Use with IAR versions < 4.0
	    PUBLIC  mul16

	    RSEG    CODE
mul16

#define     x1      r9
#define     z0      r13
#define     z1      r15
#define     x       r12
#define     y       r14

            push    r9

	    clr	    z0
	    mov	    z0,z1
	    mov	    z0,x1
	    tst	    x
	    jge	    xbooth_2
	    mov	    #-1,x1
	    jmp	    xbooth_2

xbooth_6
	    add	    x,z1
	    addc    x1,z0
xbooth_1
	    rla	    x
	    rlc	    x1
xbooth_2
	    rra	    y
	    jc	    xbooth_5
	    jne	    xbooth_1
	    jmp	    xbooth_4

xbooth_5
	    sub	    x,z1
	    subc    x1,z0
xbooth_3
	    rla	    x
	    rlc	    x1
	    rra	    y
	    jnc	    xbooth_6
	    cmp	    #0FFFFh,y
	    jne	    xbooth_3

xbooth_4
            mov     z1,r12

            pop     r9

            ret
            END
